/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

import { Addr, Uint128, ConfigResponse, ExecuteMsg, InstantiateMsg, QueryMsg } from "./Launchpad.types";
import { CamelCasedProperties } from "type-fest";
export abstract class LaunchpadExecuteMsgBuilder {
  static deposit = ({
    amount
  }: CamelCasedProperties<Extract<ExecuteMsg, {
    deposit: unknown;
  }>["deposit"]>): ExecuteMsg => {
    return {
      deposit: ({
        amount
      } as const)
    };
  };
  static harvest = (): ExecuteMsg => {
    return {
      harvest: ({} as const)
    };
  };
  static updateConfig = ({
    endTime,
    offeringAmount,
    offeringToken,
    raisingAmount,
    raisingDenom,
    startTime
  }: CamelCasedProperties<Extract<ExecuteMsg, {
    update_config: unknown;
  }>["update_config"]>): ExecuteMsg => {
    return {
      update_config: ({
        end_time: endTime,
        offering_amount: offeringAmount,
        offering_token: offeringToken,
        raising_amount: raisingAmount,
        raising_denom: raisingDenom,
        start_time: startTime
      } as const)
    };
  };
  static finalWithdraw = ({
    offerAmount,
    raiseAmount
  }: CamelCasedProperties<Extract<ExecuteMsg, {
    final_withdraw: unknown;
  }>["final_withdraw"]>): ExecuteMsg => {
    return {
      final_withdraw: ({
        offer_amount: offerAmount,
        raise_amount: raiseAmount
      } as const)
    };
  };
  static flipAllowClaim = (): ExecuteMsg => {
    return {
      flip_allow_claim: ({} as const)
    };
  };
}
export abstract class LaunchpadQueryMsgBuilder {
  static getUser = ({
    address
  }: CamelCasedProperties<Extract<QueryMsg, {
    get_user: unknown;
  }>["get_user"]>): QueryMsg => {
    return {
      get_user: ({
        address
      } as const)
    };
  };
  static getTotalAmount = (): QueryMsg => {
    return {
      get_total_amount: ({} as const)
    };
  };
  static config = (): QueryMsg => {
    return {
      config: ({} as const)
    };
  };
  static isClaimingAllowed = (): QueryMsg => {
    return {
      is_claiming_allowed: ({} as const)
    };
  };
}